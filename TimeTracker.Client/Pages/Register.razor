@page "/register"
@inject IAuthService AuthService


<h3>Register</h3>

<EditForm Model="newUser" OnValidSubmit="HandleSubmit" >
    <DataAnnotationsValidator />
    <MyInputText Label="Name" Id="name" @bind-Value="newUser.UserName" ValFor="() => newUser.UserName" />
    <MyInputText Label="E-Mail" Id="email" @bind-Value="newUser.Email" ValFor="() => newUser.Email" />
    <MyInputText Label="Password" Id="password" @bind-Value="newUser.Password" ValFor="() => newUser.Password" Type="password"/>
    <MyInputText Label="Confirm Password" Id="ConfirmPassword" @bind-Value="newUser.ConfirmPassword" ValFor="() => newUser.ConfirmPassword" Type="password" />
    <MyButton Text="Register" Type="submit" AddMarginTop="true" Level="MyButton.ButtonLevel.Primary" />
</EditForm>

@if (registrationFailed)
{
  
        @foreach (var error in errors)
        {  
            <div>
             <span class="text-xs text-red-600 font-bold my-1">@error</span>
            </div>
        }
    
}

@if (registrationSuccessful)
{
    <div>
          <span class="text-xs text-green-600 font-bold my-1">
              Registration Successful. You may <a href="login" class="underline">Login</a> now.
          </span>
    </div>
}

@code {

        AccountRegistrationRequest newUser = new AccountRegistrationRequest();
        bool registrationFailed = false;
        bool registrationSuccessful = false;

        List<string> errors = new List<string>();

       
        protected override void OnInitialized()
        {
            newUser = new AccountRegistrationRequest();
         }


        async Task HandleSubmit()
        {
            registrationFailed = registrationSuccessful = false;
            errors = new List<string>();
            var response =  await AuthService.Register(newUser);

            registrationSuccessful = response.IsSuccessful;

            if(!response.IsSuccessful && response.Errors != null)
            {
                errors = response.Errors.ToList();
                registrationFailed = true;

            }
            else
            {
                if (!response.IsSuccessful)
                {
                    errors.Add("An unexpected error occurred");
                    registrationFailed = true;
                }
            }

        }
}