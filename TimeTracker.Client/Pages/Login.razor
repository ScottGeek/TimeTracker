@page "/login"
@inject IAuthService AuthService

<div class="lg:px-80">
<h3>Login</h3>

<EditForm Model="loginRequest" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <MyInputText Label="Name" Id="name" @bind-Value="loginRequest.UserName" ValFor="() => loginRequest.UserName"/>
    <MyInputText Label="Password" Id="password" Type="password" @bind-Value="loginRequest.Password" ValFor="() => loginRequest.Password"/>
    <MyButton Text="Login" Type="submit" AddMarginTop="true" Level="MyButton.ButtonLevel.Secondary" />
 </EditForm>

@if (loginFailed)
{
    <div>
        <span class="text-xs text-red-600 font-bold my-1">@errorMessage</span>
    </div>
}
</div>
@code {

    LoginRequest loginRequest = new LoginRequest();
    bool loginFailed = false;
    string errorMessage = string.Empty;

    public async Task HandleSubmit()
    {

        loginFailed = false;
        var response = await AuthService.Login(loginRequest);

        if (!response.IsSuccessful && response.Error != null)
        {
            errorMessage = response.Error;
            loginFailed = true;
        }
        else
        {
            if (!response.IsSuccessful)
            {
                errorMessage = "An Unexpected error occurred";
                loginFailed = true;
            }
        }


    }
}
